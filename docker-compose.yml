# 为了简便，docker-compose.yml 使用的是上课过程中启动的服务，并未对 BMS 编写并启动专门的 docker-compose
version: '3.8'

services:
  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: mysql-demo
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
    volumes:
      - ./mysql-data:/var/lib/mysql

  # Redis 服务
  redis:
    image: redis:latest
    container_name: redis-demo
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

  # RocketMQ NameServer
  namesrv:
    image: apache/rocketmq:5.3.3
    container_name: rmqnamesrv
    ports:
      - "9876:9876"
    networks:
      - rocketmq
    command: sh mqnamesrv

  # RocketMQ Broker
  broker:
    image: apache/rocketmq:5.3.3
    container_name: rmqbroker
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    depends_on:
      - namesrv
    networks:
      - rocketmq
    command: sh mqbroker

  # RocketMQ Proxy
  proxy:
    image: apache/rocketmq:5.3.3
    container_name: rmqproxy
    ports:
      - "8090:8080"
      - "8091:8081"
    depends_on:
      - broker
      - namesrv
    networks:
      - rocketmq
    restart: on-failure
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    command: sh mqproxy

  # Elasticsearch 服务
  elasticsearch:
    image: elasticsearch:9.0.1
    container_name: elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - ./elasticsearch_data/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch_data/data:/usr/share/elasticsearch/data
      - ./elasticsearch_data/plugins:/usr/share/elasticsearch/plugins
    networks:
      - elasticsearch

  # Kibana 服务
  kibana:
    image: kibana:9.0.1
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - TZ=Asia/Shanghai
    depends_on:
      - elasticsearch
    networks:
      - elasticsearch

  # ZooKeeper 服务
  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  # Kafka 服务
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

networks:
  rocketmq:
    driver: bridge
  elasticsearch:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data:
